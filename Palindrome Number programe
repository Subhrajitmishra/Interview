
import java.util.function.Predicate;

public class PalindromeNumber {

	public static boolean checkPalindrome(Long number) {
		String s = number.toString();
		String temp = s;
		boolean palindrome = true;
		Predicate<String> check = s2 -> {
			String s3 = new StringBuilder(s2).reverse().toString();
			if (s2.equals(s3)) {
				return true;
			} else {
				return false;
			}
		};
		if (Boolean.FALSE.equals(check.test(s))) {
			while (true) {
				StringBuffer buffer = new StringBuffer();
				char[] c = temp.toCharArray();
				for (int i = 0; i < c.length - 1; i = i + 2) {
					buffer = buffer.append(Character.getNumericValue(c[i]) + Character.getNumericValue(c[i + 1]));
				}
				temp = buffer.toString();
				if (Long.parseLong(temp) <= 10) {
					palindrome = false;
					break;
				}
			}
		}
		return palindrome;
	}

	public static void main(String[] args) {
		System.out.println(checkPalindrome(122336l));
	}
}
